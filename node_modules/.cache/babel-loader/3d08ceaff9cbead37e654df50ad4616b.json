{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n// import './movie-list.scss';\n// import { SwiperSlide, Swiper } from 'swiper/react';\n// // import { Link } from 'react-router-dom';\n// // import Button from '../button/Button';\n// import tmdbApi, { category } from '../../api/tmdbApi';\n// // import apiConfig from '../../api/apiConfig';\n// import MovieCard from '../movie-card/MovieCard';\n// const MovieList = props => {\n//     const [items, setItems] = useState([]);\n//     useEffect(() => {\n//         const getList = async () => {\n//             let response = null;\n//             const params = {};\n//             if (props.type !== 'similar') {\n//                 switch(props.category) {\n//                     case category.movie:\n//                         response = await tmdbApi.getMoviesList(props.type, {params});\n//                         break;\n//                     default:\n//                         response = await tmdbApi.getTvList(props.type, {params});\n//                 }\n//             } else {\n//                 response = await tmdbApi.similar(props.category, props.id);\n//             }\n//             setItems(response.results);\n//         }\n//         getList();\n//     }, []);\n//     return (\n//         <div className=\"movie-list\">\n//             <Swiper\n//                 grabCursor={true}\n//                 spaceBetween={10}\n//                 slidesPerView={'auto'}\n//             >\n//                 {\n//                     items.map((item, i) => (\n//                         <SwiperSlide key={i}>\n//                             <MovieCard item={item} category={props.category}/>\n//                         </SwiperSlide>\n//                     ))\n//                 }\n//             </Swiper>\n//         </div>\n//     );\n// }\n// MovieList.propTypes = {\n//     category: PropTypes.string.isRequired,\n//     type: PropTypes.string.isRequired\n// }\n// export default MovieList;","map":{"version":3,"names":[],"sources":["C:/Users/admin/Desktop/REACT/react-movie/src/components/movie-list/MovieList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import PropTypes from 'prop-types';\n\n// import './movie-list.scss';\n\n// import { SwiperSlide, Swiper } from 'swiper/react';\n// // import { Link } from 'react-router-dom';\n\n// // import Button from '../button/Button';\n\n// import tmdbApi, { category } from '../../api/tmdbApi';\n// // import apiConfig from '../../api/apiConfig';\n\n// import MovieCard from '../movie-card/MovieCard';\n\n// const MovieList = props => {\n\n//     const [items, setItems] = useState([]);\n\n//     useEffect(() => {\n//         const getList = async () => {\n//             let response = null;\n//             const params = {};\n\n//             if (props.type !== 'similar') {\n//                 switch(props.category) {\n//                     case category.movie:\n//                         response = await tmdbApi.getMoviesList(props.type, {params});\n//                         break;\n//                     default:\n//                         response = await tmdbApi.getTvList(props.type, {params});\n//                 }\n//             } else {\n//                 response = await tmdbApi.similar(props.category, props.id);\n//             }\n//             setItems(response.results);\n//         }\n//         getList();\n//     }, []);\n\n//     return (\n//         <div className=\"movie-list\">\n//             <Swiper\n//                 grabCursor={true}\n//                 spaceBetween={10}\n//                 slidesPerView={'auto'}\n//             >\n//                 {\n//                     items.map((item, i) => (\n//                         <SwiperSlide key={i}>\n//                             <MovieCard item={item} category={props.category}/>\n//                         </SwiperSlide>\n//                     ))\n//                 }\n//             </Swiper>\n//         </div>\n//     );\n// }\n\n// MovieList.propTypes = {\n//     category: PropTypes.string.isRequired,\n//     type: PropTypes.string.isRequired\n// }\n\n// export default MovieList;\n"],"mappings":"AAAA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}